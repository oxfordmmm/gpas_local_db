"""Auditing versioning of tables

Revision ID: 8c1afc2aa455
Revises: 30977c91922f
Create Date: 2024-02-15 15:44:56.561344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8c1afc2aa455'
down_revision: Union[str, None] = '30977c91922f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analyses_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('sample_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('assay_system', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_analyses_version'))
    )
    with op.batch_alter_table('analyses_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_analyses_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analyses_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_analyses_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('drug_resistance_result_types_version',
    sa.Column('code', sa.String(length=1), autoincrement=False, nullable=False),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('code', 'transaction_id', name=op.f('pk_drug_resistance_result_types_version'))
    )
    with op.batch_alter_table('drug_resistance_result_types_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_drug_resistance_result_types_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_drug_resistance_result_types_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_drug_resistance_result_types_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('drug_resistances_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('antibiotic', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('drug_resistance_result_type_code', sa.String(length=1), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_drug_resistances_version'))
    )
    with op.batch_alter_table('drug_resistances_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_drug_resistances_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_drug_resistances_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_drug_resistances_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('other_types_version',
    sa.Column('code', sa.String(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('value_type', postgresql.ENUM('str', 'int', 'float', 'bool', 'date', 'text', name='value_type', create_type=False, create_constraint=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('code', 'transaction_id', name=op.f('pk_other_types_version'))
    )
    with op.batch_alter_table('other_types_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_other_types_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_other_types_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_other_types_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('others_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('other_type_code', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('value_str', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('value_int', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('value_float', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('value_bool', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('value_date', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('value_text', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_others_version'))
    )
    with op.batch_alter_table('others_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_others_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_others_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_others_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('owners_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('site', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('user', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_owners_version'))
    )
    with op.batch_alter_table('owners_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_owners_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_owners_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_owners_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('runs_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('code', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('run_date', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('site', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('sequencing_method', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('machine', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('user', sa.String(length=5), autoincrement=False, nullable=True),
    sa.Column('number_samples', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('flowcell', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('passed_qc', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_runs_version'))
    )
    with op.batch_alter_table('runs_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_runs_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_runs_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_runs_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('sample_detail_types_version',
    sa.Column('code', sa.String(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('value_type', postgresql.ENUM('str', 'int', 'float', 'bool', 'date', 'text', name='value_type', create_type=False, create_constraint=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('code', 'transaction_id', name=op.f('pk_sample_detail_types_version'))
    )
    with op.batch_alter_table('sample_detail_types_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sample_detail_types_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sample_detail_types_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_sample_detail_types_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('sample_details_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('sample_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('sample_detail_type_code', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('value_str', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('value_int', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('value_float', sa.Float(), autoincrement=False, nullable=True),
    sa.Column('value_bool', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('value_date', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('value_text', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_sample_details_version'))
    )
    with op.batch_alter_table('sample_details_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sample_details_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sample_details_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_sample_details_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('samples_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('specimen_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('run_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('guid', sa.String(length=64), autoincrement=False, nullable=True),
    sa.Column('sample_category', postgresql.ENUM('culture', 'unclutured', name='sample_category', create_type=False, create_constraint=True), autoincrement=False, nullable=True),
    sa.Column('nucleic_acid_type', postgresql.ARRAY(sa.String()), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_samples_version'))
    )
    with op.batch_alter_table('samples_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_samples_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_samples_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_samples_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('speciations_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('species_number', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('species', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('sub_species', sa.String(length=100), autoincrement=False, nullable=True),
    sa.Column('analysis_date', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('data', sa.JSON(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_speciations_version'))
    )
    with op.batch_alter_table('speciations_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_speciations_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_speciations_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_speciations_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('specimens_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('accession', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('collection_date', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('country_sample_taken_code', sa.String(length=3), autoincrement=False, nullable=True),
    sa.Column('specimen_type', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('specimen_qr_code', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('bar_code', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_specimens_version'))
    )
    with op.batch_alter_table('specimens_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_specimens_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_specimens_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_specimens_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('spikes_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('sample_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('name', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_spikes_version'))
    )
    with op.batch_alter_table('spikes_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_spikes_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_spikes_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_spikes_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('storages_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('specimen_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('freezer_id', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('freezer_compartment', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('freezer_sub_compartment', sa.String(length=20), autoincrement=False, nullable=True),
    sa.Column('storage_qr_code', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('date_into_storage', sa.Date(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.String(length=50), server_default=sa.text('CURRENT_USER'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=3), server_default=sa.text('NOW()'), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_storages_version'))
    )
    with op.batch_alter_table('storages_version', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_storages_version_end_transaction_id'), ['end_transaction_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_storages_version_operation_type'), ['operation_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_storages_version_transaction_id'), ['transaction_id'], unique=False)

    op.create_table('transaction',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transaction'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    with op.batch_alter_table('storages_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_storages_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_storages_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_storages_version_end_transaction_id'))

    op.drop_table('storages_version')
    with op.batch_alter_table('spikes_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_spikes_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_spikes_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_spikes_version_end_transaction_id'))

    op.drop_table('spikes_version')
    with op.batch_alter_table('specimens_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_specimens_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_specimens_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_specimens_version_end_transaction_id'))

    op.drop_table('specimens_version')
    with op.batch_alter_table('speciations_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_speciations_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_speciations_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_speciations_version_end_transaction_id'))

    op.drop_table('speciations_version')
    with op.batch_alter_table('samples_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_samples_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_samples_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_samples_version_end_transaction_id'))

    op.drop_table('samples_version')
    with op.batch_alter_table('sample_details_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sample_details_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_sample_details_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_sample_details_version_end_transaction_id'))

    op.drop_table('sample_details_version')
    with op.batch_alter_table('sample_detail_types_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sample_detail_types_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_sample_detail_types_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_sample_detail_types_version_end_transaction_id'))

    op.drop_table('sample_detail_types_version')
    with op.batch_alter_table('runs_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_runs_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_runs_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_runs_version_end_transaction_id'))

    op.drop_table('runs_version')
    with op.batch_alter_table('owners_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_owners_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_owners_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_owners_version_end_transaction_id'))

    op.drop_table('owners_version')
    with op.batch_alter_table('others_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_others_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_others_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_others_version_end_transaction_id'))

    op.drop_table('others_version')
    with op.batch_alter_table('other_types_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_other_types_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_other_types_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_other_types_version_end_transaction_id'))

    op.drop_table('other_types_version')
    with op.batch_alter_table('drug_resistances_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_drug_resistances_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_drug_resistances_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_drug_resistances_version_end_transaction_id'))

    op.drop_table('drug_resistances_version')
    with op.batch_alter_table('drug_resistance_result_types_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_drug_resistance_result_types_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_drug_resistance_result_types_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_drug_resistance_result_types_version_end_transaction_id'))

    op.drop_table('drug_resistance_result_types_version')
    with op.batch_alter_table('analyses_version', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analyses_version_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_analyses_version_operation_type'))
        batch_op.drop_index(batch_op.f('ix_analyses_version_end_transaction_id'))

    op.drop_table('analyses_version')
    # ### end Alembic commands ###
