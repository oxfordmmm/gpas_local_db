name: Build and Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, macos-14]
        include:
          - os: macos-14
            arch: arm64
          - os: macos-latest
            arch: x64
          - os: ubuntu-latest
            arch: x64
          - os: windows-latest
            arch: x64
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        architecture: ${{ matrix.arch }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install .
      shell: bash
    - name: Extract version from tag
      id: get_version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      shell: bash
    - name: Build Executable
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          pyinstaller --onefile --name gpaslocal-${{ env.RELEASE_VERSION }}-${{ runner.os }}-${{ matrix.arch }}.exe src/gpaslocal/cli.py
        else
          pyinstaller --onefile --name gpaslocal-${{ env.RELEASE_VERSION }}-${{ runner.os }}-${{ matrix.arch }} src/gpaslocal/cli.py
        fi
      shell: bash
    - name: Upload Executable to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/gpaslocal-${{ env.RELEASE_VERSION }}-${{ runner.os }}-${{ matrix.arch }}${{ runner.os == 'Windows' && '.exe' || '' }}
        asset_name: gpaslocal-${{ env.RELEASE_VERSION }}-${{ runner.os }}-${{ matrix.arch }}${{ runner.os == 'Windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream